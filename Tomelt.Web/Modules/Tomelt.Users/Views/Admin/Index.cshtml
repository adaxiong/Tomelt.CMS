@*@model Tomelt.Users.ViewModels.UsersIndexViewModel*@
@using Tomelt.Core.Shapes;
@using Tomelt.Users.Models;
@using Tomelt.Users.ViewModels;

@model UserSearch

@{
    //var userIndex = 0;

    Layout.Title = T("用户管理").ToString();
}

@*@using (Html.BeginFormAntiForgeryPost()) { 
    @Html.ValidationSummary()
    <div class="manage">@Html.ActionLink(T("Add a new user").ToString(), "Create", new { }, new { @class = "button primaryAction" })</div>

    <fieldset class="bulk-actions">
        <label for="publishActions">@T("Actions:")</label>
        <select id="publishActions" name="@Html.NameOf(m => m.Options.BulkAction)">
            @Html.SelectOption(Model.Options.BulkAction, UsersBulkAction.None, T("Choose action...").ToString())
            @Html.SelectOption(Model.Options.BulkAction, UsersBulkAction.Approve, T("Approve").ToString()) 
            @Html.SelectOption(Model.Options.BulkAction, UsersBulkAction.Disable, T("Disable").ToString())
            @Html.SelectOption(Model.Options.BulkAction, UsersBulkAction.ChallengeEmail, T("Send challenge E-mail").ToString())
            @Html.SelectOption(Model.Options.BulkAction, UsersBulkAction.Delete, T("Delete").ToString())
        </select>
        <button type="submit" name="submit.BulkEdit" value="@T("Apply")">@T("Apply")</button>
    </fieldset>
    <fieldset class="bulk-actions">
        @Html.TextBoxFor(m => m.Options.Search, new { @class = "text" })        
        <label for="filterResults">@T("Filter:")</label>
        <select id="filterResults" name="@Html.NameOf(m => m.Options.Filter)">
            @Html.SelectOption(Model.Options.Filter, UsersFilter.All, T("All Users").ToString())
            @Html.SelectOption(Model.Options.Filter, UsersFilter.Approved, T("Approved Users").ToString())
            @Html.SelectOption(Model.Options.Filter, UsersFilter.Pending, T("Pending Users").ToString())
            @Html.SelectOption(Model.Options.Filter, UsersFilter.EmailPending, T("Pending Emails").ToString())
        </select>
        <label for="sortResults">@T("Sort by:")</label>
        <select id="sortResults" name="@Html.NameOf(m => m.Options.Order)">
            @Html.SelectOption(Model.Options.Order, UsersOrder.Name, T("Name").ToString())
            @Html.SelectOption(Model.Options.Order, UsersOrder.Email, T("Email").ToString())
            @Html.SelectOption(Model.Options.Order, UsersOrder.CreatedUtc, T("Creation Time").ToString())
            @Html.SelectOption(Model.Options.Order, UsersOrder.LastLoginUtc, T("Last Login Time").ToString())
        </select>

        <button type="submit" name="submit.Filter" value="@T("Filter")">@T("Filter")</button>
    </fieldset>
    <fieldset>
        <table class="items">
            <thead>
                <tr>
                    <th scope="col"><input type="checkbox" class="check-all"/></th>
                    <th scope="col">@T("Name")</th>
                    <th scope="col">@T("Email")</th>
                    <th scope="col">@T("Actions")</th>
                    <th scope="col">@T("Creation Time")</th>
                    <th scope="col">@T("Last Login Time")</th>
                </tr>
            </thead>
            @foreach (var entry in Model.Users) { 
            <tr>
                <td>
                    <input type="hidden" value="@Model.Users[userIndex].User.Id" name="@Html.NameOf(m => m.Users[userIndex].User.Id)"/>
                    <input type="checkbox" value="true" name="@Html.NameOf(m => m.Users[userIndex].IsChecked)"/>
                </td>
                <td>
                    @if (entry.User.RegistrationStatus == UserStatus.Approved && entry.User.EmailStatus == UserStatus.Approved) { 
                    <img class="icon" src="@Href("~/Modules/Tomelt.Users/Content/Admin/images/online.gif") " alt="@T("Approved") " title="@T("User is approved") " /> 
                    } else { 
                    <img class="icon" src="@Href("~/Modules/Tomelt.Users/Content/Admin/images/offline.gif") " alt="@T("Moderated") " title="@if (entry.User.EmailStatus == UserStatus.Approved) { @T("User is moderated") } else { @T("E-mail validation is pending") }" />
                    } 
                    @Html.ActionLink(entry.User.UserName, "Edit", new { entry.User.Id }) 
                </td>
                <td>
                    @entry.User.Email 
                </td>
                <td>
                    @Html.ActionLink(T("Edit").ToString(), "Edit", new { entry.User.Id }) |
                    @Html.ActionLink(T("Delete").ToString(), "Delete", new { entry.User.Id}, new { itemprop = "RemoveUrl UnsafeUrl" }) |
                    @if (entry.User.RegistrationStatus == UserStatus.Pending) {
                        @Html.ActionLink(T("Approve").ToString(), "Approve", new { entry.User.Id }, new { itemprop = "UnsafeUrl" })
                    } else {
                        @Html.ActionLink(T("Disable").ToString(), "Moderate", new { entry.User.Id }, new { itemprop = "UnsafeUrl" })
                    }
                    @if (entry.User.EmailStatus == UserStatus.Pending) { <text>|</text>
                        @Html.ActionLink(T("Send challenge E-mail").ToString(), "SendChallengeEmail", new { entry.User.Id }, new { itemprop = "UnsafeUrl" })
                    } 
                </td>
                <td>
                    @if (entry.User.CreatedUtc != null) {
                        @Display(New.DateTimeRelative(dateTimeUtc: entry.User.CreatedUtc))
                    }
                </td>
                <td>
                    @if (entry.User.LastLoginUtc != null) {
                        @Display(New.DateTimeRelative(dateTimeUtc: entry.User.LastLoginUtc))
                    }
                </td>
            </tr>
                    userIndex++;
            }
        </table>

    @Display(Model.Pager)

    </fieldset>
}*@ 



<form id="searchFrm">
    <fieldset class="text-center">
        <legend class="f15"><span class="glyphicon glyphicon-search"></span> 搜索条件</legend>
        <div class="row">
            <div class="col-xs-4">
                @Html.EasyUIFor(d => d.UserNameOrEmali, "easyui-textbox", new
                {
                    width = 200,
                    prompt = "-请输入用户名称或邮箱关键字-",
                    label = "名称或邮箱：",
                })

            </div>


        </div>

        <div class="row mt05">
            <div class="col-xs-12">
                <a href="javascript:searchData();" class="easyui-linkbutton c8 " data-options="iconCls:'icon-search icon-large',width:80">查找</a>
                <a href="javascript:resetData();" class="easyui-linkbutton c2 umar-l" data-options="iconCls:'icon-reload',width:80">重置</a>
            </div>
        </div>
    </fieldset>
</form>


<div id="tb">
    <a href="javascript:;" class="easyui-linkbutton" data-options="iconCls:'icon-unchecked',plain:true" onclick="datagridChecked(this, 'dataGrid');">全选</a>
    <a href="javascript:;" class="easyui-linkbutton" data-options="iconCls:'icon-reload',plain:true,text:'刷新'" onclick="$('#dataGrid').datagrid('reload');"></a>
    <a href="javascript:;" class="easyui-linkbutton" data-options="iconCls:'icon-add',plain:true,text:'新增'" onclick="addData('@Url.Action("Create")');"></a>
    <a href="javascript:;" class="easyui-linkbutton" data-options="iconCls:'icon-edit',plain:true,text:'编辑'" onclick="updateData('@Url.Action("Edit")');"></a>
    <a href="javascript:;" class="easyui-linkbutton" data-options="iconCls:'icon-delete',plain:true,text:'删除'" onclick="deleteData();"></a>
</div>

<table id="dataGrid" style="width: 100%"></table>

@using (Script.Foot())
{

    <script>
        $(function () {
            loadList();
        });
        //加载数据列表
        function loadList() {
            $('#dataGrid').datagrid({
                title: '@Layout.Title', //列表的标题
                iconCls: 'icon-datalist',
                height: 'auto',
                nowrap: true, //如果为true，则在同一行中显示数据。设置为true可以提高加载性能
                striped: true, //是否显示斑马线效果。
                collapsible: true, //定义是否显示可折叠按钮。
                url: '@Url.Action("GetList")', //获取数据的url
                sortName: 'Id', //。定义哪些列可以进行排序。
                sortOrder: 'asc', //定义列的排序顺序，只能是'asc'或'desc'。
                idField: 'Id', //指明哪一个字段是标识字段
                queryParams: {},
                toolbar: '#tb',
                columns: [
                    [

                        { field: 'UserName', title: '用户名称', width: 100, align: "center" },
                        { field: 'Email', title: '电子邮件', width: 150, align: "center" },
                        {
                            field: 'CreatedUtc',
                            title: '创建时间',
                            width: 150,
                            align: "center",
                            formatter: function (value, row, index) {
                                return formatValue.dateTime(value);
                            }
                        },
                        {
                            field: 'LastLoginUtc',
                            title: '上次登录时间',
                            width: 150,
                            align: "center",
                            formatter: function (value, row, index) {
                                return formatValue.dateTime(value);
                            }
                        },
                        {
                            field: 'RegistrationStatus', title: '用户状态', width: 100, align: "center",
                            formatter: function (value, row, index) {
                                var ischeck = value == 1 ? "true" : "false";
                                return "<input id=\""+row.Id+"\" class=\"easyui-switchbutton\" data-options=\"checked:" + ischeck+",onText: '开启',offText: '禁用'\">";
                                
                            }
                        }
                    ]
                ],
                singleSelect: true,
                fitColumns: true,
                pagination: true, //如果为true，则在DataGrid控件底部显示分页工具栏。
                rownumbers: true,//如果为true，则显示一个行号列。
                onLoadSuccess: function () {
                    $(".easyui-switchbutton").switchbutton({
                        //readonly: true,
                        height: 20,
                        onChange: function(res) {
                            //alert(this.id);

                        }
                    });

                }
            });
        }
    </script>

}