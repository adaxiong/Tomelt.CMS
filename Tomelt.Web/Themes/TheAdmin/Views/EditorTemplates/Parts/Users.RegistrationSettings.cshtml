@model Tomelt.Users.Models.RegistrationSettingsPart
@using Tomelt.Messaging.Services;

@{
    var messageManager = WorkContext.Resolve<IMessageManager>();
    var emailEnabled = messageManager.GetAvailableChannelServices().Contains("email");
}

<div class="col-xs-12 text-center">
    <div class="form-group">
        <h4>@T("用户设置")</h4>
        <hr />
    </div>
</div>

<div class="col-xs-12">
    <div class="form-group checkbox">
        <label for="@Html.FieldIdFor(m => m.UsersCanRegister)">
            @Html.EditorFor(m => m.UsersCanRegister) 
            @T("用户可在网站中创建新帐户")
        </label>

    </div>
</div>

<div class="col-xs-12 hidden">
    <div class="form-group checkbox">
        
        <input name="@Html.FieldNameFor(m => m.EnableLostPassword)" type="hidden" value="false">
        <label for="@Html.FieldIdFor(m => m.EnableLostPassword)">
            <input type="checkbox" value="true" id="@Html.FieldIdFor(m => m.EnableLostPassword)" name="@Html.FieldNameFor(m => m.EnableLostPassword)" @(Model.EnableLostPassword ? "checked=\"checked\"" : "") @(emailEnabled ? "" : "disabled=\"disabled\"") />
            @T("显示允许用户重置密码的链接")
        </label>
        
        @if(!emailEnabled) {
            <div class="alert alert-warning">@T("电子邮件模块被激活时，此选项才可用")</div>
        }
    </div>
</div>

<div class="col-xs-12 hidden">
    <div class="form-group checkbox">
        <input name="@Html.FieldNameFor(m => m.UsersMustValidateEmail)" type="hidden" value="false">
        <label for="@Html.FieldIdFor(m => m.UsersMustValidateEmail)">
            <input type="checkbox" value="true" id="@Html.FieldIdFor(m => m.UsersMustValidateEmail)" name="@Html.FieldNameFor(m => m.UsersMustValidateEmail)" @(Model.UsersMustValidateEmail ? "checked=\"checked\"" : "") @(emailEnabled ? "" : "disabled=\"disabled\"") />  
            @T("用户必须认证其电子邮件地址。")
        </label>

        @if(!emailEnabled) {
            <div class="alert alert-warning">@T("电子邮件模块被激活时，此选项才可用。")</div>
        }
    </div>
</div>

<div data-controllerid="@Html.FieldIdFor(m => m.UsersMustValidateEmail)" class="hidden">
    <label for="@Html.FieldIdFor( m => m.ValidateEmailRegisteredWebsite)">@T("Website public name")</label>
    @Html.TextBoxFor(m => m.ValidateEmailRegisteredWebsite, new { @class = "text medium" } )
    @Html.ValidationMessage("ValidateEmailRegisteredWebsite", "*")
    <span class="hint">@T("The name of your website as it will appear in the verification e-mail.")</span>
        
    <label for="@Html.FieldIdFor( m => m.ValidateEmailContactEMail)">@T("Contact Us E-Mail address")</label>
    @Html.TextBoxFor(m => m.ValidateEmailContactEMail, new { @class = "text medium" } )
    @Html.ValidationMessage("ValidateEmailContactEMail", "*")
    <span class="hint">@T("The e-mail address displayed in the verification e-mail for a Contact Us link. Leave empty for no link.")</span>
</div>



<div class="col-xs-12">
    <div class="form-group checkbox">
        <label for="@Html.FieldIdFor(m => m.UsersAreModerated)">
            @Html.EditorFor(m => m.UsersAreModerated)
            @T("用户在登录前须经审核")
        </label>

    </div>
</div>
@*是否发送通知通过邮件（暂不需要这个功能，以后扩展成手机或者微信通知）*@
<div data-controllerid="@Html.FieldIdFor(m => m.UsersAreModerated)" class="hidden">
    <input type="checkbox" value="true" class="check-box" id="@Html.FieldIdFor(m => m.NotifyModeration)" name="@Html.FieldNameFor(m => m.NotifyModeration)" @(Model.NotifyModeration ? "checked=\"checked\"" : "") @(emailEnabled ? "" : "disabled=\"disabled\"")/>
    <input name="@Html.FieldNameFor(m => m.NotifyModeration)" type="hidden" value="false">
    <label class="forcheckbox" for="@Html.FieldIdFor( m => m.NotifyModeration)">@T("Send a notification when a user needs moderation")</label>

    @if(!emailEnabled) {
        <div class="message message-Warning">@T("This option is available when an email module is activated.")</div>
    }

</div>
<div data-controllerid="@Html.FieldIdFor(m => m.NotifyModeration)" class="hidden">
    <label for="@Html.FieldIdFor( m => m.NotificationsRecipients)">@T("Moderators")</label>
    @Html.TextBoxFor(m => m.NotificationsRecipients, new { @class = "text medium" } )
    @Html.ValidationMessage("NotificationsRecipients", "*")
    <span class="hint">@T("The usernames to send the notifications to (e.g., \"admin, user1, ...\").")</span>
</div>    