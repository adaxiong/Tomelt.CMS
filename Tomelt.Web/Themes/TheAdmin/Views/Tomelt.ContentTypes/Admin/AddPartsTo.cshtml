@using Tomelt.Utility.Extensions
@model Tomelt.ContentTypes.ViewModels.AddPartsViewModel
@{
    Style.Require("ContentTypesAdmin");
    Layout.Title = T("添加元件到 \"{0}\"", Model.Type.DisplayName).ToString();
    var returnUrl = Request.QueryString["returnUrl"];
}
<h3 class="text-center">@Layout.Title</h3>
<hr/>
<div class="col-xs-12">
    @T("选择要添加到此内容类型的元件.")
</div>

@using (Html.BeginFormAntiForgeryPost()) {
    @Html.ValidationSummary()

        @Html.UnorderedList(
            Model.PartSelections,
            (partSelection, i) => {
                var fieldNameStart = "PartSelections[" + i + "].";
                var fieldId = ViewData.TemplateInfo.GetFullHtmlFieldId(fieldNameStart + "IsSelected");
                return MvcHtmlString.Create(
                    string.Format(
                        "<div class='col-xs-12'><div class='form-group checkbox'><label for=\"{1}\">{0}{2}</label>{3}{4}</div></div>",
                        Html.CheckBox(fieldNameStart + "IsSelected"),
                        fieldId,
                        partSelection.PartDisplayName,
                        !string.IsNullOrWhiteSpace(partSelection.PartDescription) ? string.Format("<p for=\"{0}\" class='description'>{1}</label>", fieldId, partSelection.PartDescription) : "",
                        Html.Hidden(fieldNameStart + "PartName", partSelection.PartName)));

            },
            "ul-point col-xs-12")
 
    <hr/>
    <div class="col-xs-12 text-center">
        <div class="form-group">
            <button class="easyui-linkbutton c6" type="submit" data-options="iconCls:'icon-save'">@T("保存提交")</button>
            @if (!String.IsNullOrWhiteSpace(returnUrl) && Request.IsLocalUrl(returnUrl))
            {
                <a class="easyui-linkbutton c5" type="button" data-options="iconCls:'icon-cancel'" href="@returnUrl">@T("关闭返回")</a>
            }
        </div>
    </div>
}